{"version":3,"sources":["components/Header.js","components/Meme.js","components/Page.js","reportWebVitals.js","index.js","images/trollface.png"],"names":["Header","react_default","a","createElement","className","src","trollface","Meme","_React$useState","React","useState","_React$useState2","Object","slicedToArray","allMemes","setAllMemes","_React$useState3","_React$useState4","image","setUrl","_React$useState5","topText","botText","_React$useState6","formData","setFormData","handleChange","event","prevFormData","objectSpread","defineProperty","target","name","value","useEffect","fetch","then","res","json","data","memes","placeholder","onChange","onClick","randomNumber","Math","floor","random","length","url","Page","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","module","exports","p"],"mappings":"iLAIe,SAASA,IAInB,OACKC,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,IAAKC,MAChCL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,+CCTL,SAASG,IACxB,IAAAC,EACoCC,IAAMC,SAAS,IADnDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACWM,EADXH,EAAA,GACqBI,EADrBJ,EAAA,GAAAK,EAE4BP,IAAMC,SAAS,iCAF3CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEWE,EAFXD,EAAA,GAEkBE,EAFlBF,EAAA,GAAAG,EAGmCX,IAAMC,SAC/B,CAACW,QAAQ,GAAKC,QAAQ,KAJhCC,EAAAX,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGWI,EAHXD,EAAA,GAGoBE,EAHpBF,EAAA,GAyBK,SAASG,EAAaC,GACjBF,EAAY,SAAAG,GACP,OAAOhB,OAAAiB,EAAA,EAAAjB,CAAA,GACAgB,EADPhB,OAAAkB,EAAA,EAAAlB,CAAA,GAEKe,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,UAOhD,OAnBAxB,IAAMyB,UAAU,WACXC,MAAM,qCACAC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIxB,EAAYwB,EAAKA,KAAKC,UAC5C,IAgBGvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVH,EAAAC,EAAAC,cAAA,YACKF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqC,YAAY,eAAeC,SAAUhB,EAAcM,KAAK,UAAUC,MAAOT,EAASH,UAC5GpB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqC,YAAY,kBAAkBC,SAAUhB,EAAcM,KAAK,UAAUC,MAAOT,EAASF,YAGpHrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBuC,QApClD,WAEK,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWjC,EAASkC,QACnDC,EAAMnC,EAAS8B,GAAcK,IAEnC9B,EAAO8B,KA+BG,sCACLhD,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,IAAyBoB,EAASH,QAAlC,KACApB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAKa,IAC9BjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,IAAyBoB,EAASF,WChDvC,SAAS4B,IAMnB,OACKjD,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACI,EAAD,OCbf,IAYe4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAAqB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SAMpDC,OAAOlE,EAAAC,EAAAC,cAAC+C,EAAD,OAKZC,uBCjBAiB,EAAAC,QAAiBf,EAAAgB,EAAuB","file":"static/js/main.fb21b368.chunk.js","sourcesContent":["import React from \"react\";\r\nimport trollface from \"../images/trollface.png\";\r\n\r\n\r\nexport default function Header()\r\n{\r\n\r\n        \r\n     return(\r\n          <div>\r\n               <header className=\"header\">\r\n                    <img className=\"trollface\" src={trollface} ></img>\r\n                    <h1 className=\"title\"> Meme Generator </h1>\r\n               </header>\r\n          </div>\r\n\r\n\r\n     )\r\n\r\n\r\n\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Meme()\r\n{\r\n     const[allMemes, setAllMemes] = React.useState([])\r\n     const[image, setUrl] = React.useState(\"http://i.imgflip.com/1bij.jpg\")\r\n     const[formData,setFormData] = React.useState(\r\n          {topText:\"\" , botText:\"\"}\r\n     )\r\n     \r\n\r\n     function GetMemeImage(){\r\n\r\n          const randomNumber = Math.floor(Math.random() * allMemes.length);\r\n          const url = allMemes[randomNumber].url;\r\n\r\n          setUrl(url);\r\n\r\n     }\r\n\r\n     React.useEffect(() =>{\r\n          fetch(\"https://api.imgflip.com/get_memes\")\r\n               .then(res => res.json())\r\n               .then(data => setAllMemes(data.data.memes))\r\n     },[])\r\n\r\n\r\n\r\n     function handleChange(event){\r\n          setFormData(prevFormData => {\r\n               return {\r\n                   ...prevFormData,\r\n                   [event.target.name]: event.target.value\r\n               }\r\n          })\r\n\r\n     }\r\n\r\n        \r\n     return(\r\n          <div className=\"memebox\">\r\n               <div className=\"inputDiv\">\r\n                    <form>\r\n                         <input className=\"input1\" placeholder=\"    Top Text\" onChange={handleChange} name=\"topText\" value={formData.topText}></input>\r\n                         <input className=\"input2\" placeholder=\"    Bottom Text\" onChange={handleChange} name=\"botText\" value={formData.botText}></input>\r\n                    </form>\r\n               </div>\r\n                    <button className=\"generateButton\" onClick={GetMemeImage}> Get a new meme image ðŸ–¼</button>\r\n               <div>\r\n                    <p className=\"topText\"> {formData.topText} </p>\r\n                    <img className=\"memeImg\" src={image}></img>\r\n                    <p className=\"botText\"> {formData.botText}</p>\r\n               </div>\r\n          </div>\r\n\r\n\r\n     )\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport Header from '../components/Header.js';\r\nimport Meme from '../components/Meme.js';\r\n\r\nexport default function Page()\r\n{\r\n    /* const dataElements = data.map( element => {\r\n          return <Card title={element.title} openSpots={element.openSpots} review={element.stats.reviewCount} location={element.location}price={element.price} rating={element.stats.rating} coverImg={element.coverImg} />\r\n        })*/\r\n\r\n     return(\r\n          <div>\r\n               <Header />\r\n               <Meme />\r\n          </div>\r\n\r\n\r\n     )\r\n\r\n\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Page from './components/Page.js';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n\n\n\n\nroot.render(<Page />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/trollface.16ea36d1.png\";"],"sourceRoot":""}